{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-06T23:17:25.447Z",
    "end": "2025-03-06T23:17:26.491Z",
    "duration": 1044,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bc945644-f503-4071-a203-f4f0f6518715",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0e9b5c78-937f-4085-a890-6d0fc83b46d3",
          "title": "Testes de categorias",
          "fullFile": "L:\\Repositorio\\EBAC\\Automacao de API Conhecendo GraphQL e PactumJS\\5 - Atividade QA Teste de API\\Testes\\categories\\categories.spec.js",
          "file": "\\Testes\\categories\\categories.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Testes de categorias\"",
              "fullTitle": "Testes de categorias \"before all\" hook in \"Testes de categorias\"",
              "timedOut": false,
              "duration": 420,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "token = await spec()\n  .post(\"/public/authUser\")\n  .withJson({\n    email: \"admin@admin.com\",\n    password: \"admin123\",\n  })\n  .returns(\"data.token\");",
              "err": {},
              "uuid": "f66b9e57-9e5f-4905-9b9c-5d8778fbb8b4",
              "parentUUID": "0e9b5c78-937f-4085-a890-6d0fc83b46d3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve criar uma categoria com sucesso",
              "fullTitle": "Testes de categorias Deve criar uma categoria com sucesso",
              "timedOut": false,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await spec()\n  .post(\"/api/addCategory\")\n  .withHeaders(\"authorization\", token)\n  .withJson({\n    name: \"Celulares\",\n    photo: \"any\",\n  })\n  .expectStatus(200)\n  .expectJsonMatch(categorySchema);\ncategoryId = response.body.data._id;",
              "err": {},
              "uuid": "dde87c1b-0ba6-446f-a1f9-1d27b0fc2b55",
              "parentUUID": "0e9b5c78-937f-4085-a890-6d0fc83b46d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar uma categoria existente com sucesso",
              "fullTitle": "Testes de categorias Deve editar uma categoria existente com sucesso",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n  .put(`/api/editCategory/${categoryId}`)\n  .withHeaders(\"authorization\", token)\n  .withJson({\n    name: \"Celulares baratos\",\n    photo: \"any\",\n  })\n  .expectStatus(200)\n  .expectJsonMatch({\n    success: true,\n    message: \"category updated\",\n  });",
              "err": {},
              "uuid": "201c459e-22bd-4b91-afdd-ecfe83829488",
              "parentUUID": "0e9b5c78-937f-4085-a890-6d0fc83b46d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve excluir uma categoria existente com sucesso",
              "fullTitle": "Testes de categorias Deve excluir uma categoria existente com sucesso",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n  .delete(`/api/deleteCategory/${categoryId}`)\n  .withHeaders(\"authorization\", token)\n  .expectStatus(200)\n  .expectJsonMatch({\n    success: true,\n    message: \"category deleted\",\n  });",
              "err": {},
              "uuid": "4cbcc17b-52d9-4141-ae75-933a0e31a962",
              "parentUUID": "0e9b5c78-937f-4085-a890-6d0fc83b46d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dde87c1b-0ba6-446f-a1f9-1d27b0fc2b55",
            "201c459e-22bd-4b91-afdd-ecfe83829488",
            "4cbcc17b-52d9-4141-ae75-933a0e31a962"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 118,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a7a48d32-597b-482d-8099-17dfa4ae6bcc",
          "title": "Testes de produtos",
          "fullFile": "L:\\Repositorio\\EBAC\\Automacao de API Conhecendo GraphQL e PactumJS\\5 - Atividade QA Teste de API\\Testes\\products\\products.spec.js",
          "file": "\\Testes\\products\\products.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Testes de produtos\"",
              "fullTitle": "Testes de produtos \"before all\" hook in \"Testes de produtos\"",
              "timedOut": false,
              "duration": 385,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "token = await spec()\n  .post(\"/public/authUser\")\n  .withJson({\n    email: \"admin@admin.com\",\n    password: \"admin123\",\n  })\n  .returns(\"data.token\");",
              "err": {},
              "uuid": "0577017e-683a-430a-a170-62193bf937c9",
              "parentUUID": "a7a48d32-597b-482d-8099-17dfa4ae6bcc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve criar um produto com sucesso",
              "fullTitle": "Testes de produtos Deve criar um produto com sucesso",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await spec()\n  .post(\"/api/addProduct\")\n  .withHeaders(\"authorization\", token)\n  .withJson({\n    name: \"Camiseta EBAC\",\n    price: 159.99,\n    quantity: 50,\n    categories: [\"6543a21b1c9d440001abc124\"],\n    description: \"Camiseta 100% algod√£o\",\n    photos: [\"https://exemplo.com/camiseta-bonita.jpg\"],\n    popular: true,\n    visible: true,\n  })\n  .expectStatus(200)\n  .expectJsonMatch(productSchema);\nproductId = response.body.data._id;",
              "err": {},
              "uuid": "127a9971-ca4e-4823-8d2a-086ad9a22886",
              "parentUUID": "a7a48d32-597b-482d-8099-17dfa4ae6bcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto existente com sucesso",
              "fullTitle": "Testes de produtos Deve editar um produto existente com sucesso",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n  .put(`/api/editProduct/${productId}`)\n  .withHeaders(\"authorization\", token)\n  .withJson({\n    name: \"Iphone 16 Pro\",\n    price: 5500.0,\n  })\n  .expectStatus(200)\n  .expectJsonMatch({\n    success: true,\n    message: \"product updated\",\n  });",
              "err": {},
              "uuid": "1edbc69c-2d6d-4801-aad5-21d619defce2",
              "parentUUID": "a7a48d32-597b-482d-8099-17dfa4ae6bcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um produto existente com sucesso",
              "fullTitle": "Testes de produtos Deve deletar um produto existente com sucesso",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n  .delete(`/api/deleteProduct/${productId}`)\n  .withHeaders(\"authorization\", token)\n  .expectStatus(200)\n  .expectJsonMatch({\n    success: true,\n    message: \"product deleted\",\n  });",
              "err": {},
              "uuid": "229bf827-e521-4ea6-8d0c-b6ce34b5b43d",
              "parentUUID": "a7a48d32-597b-482d-8099-17dfa4ae6bcc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "127a9971-ca4e-4823-8d2a-086ad9a22886",
            "1edbc69c-2d6d-4801-aad5-21d619defce2",
            "229bf827-e521-4ea6-8d0c-b6ce34b5b43d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 116,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}